_require "basis.smi"
_require "ffi.smi"
_require "pcre_raw.smi"
_require "either.smi"

structure Pcre =
struct
  type pcre      (= ptr)
  type extra     (= ptr)
  type t          = pcre
  
(*
  val match : string -> string -> ({msg:string, pos:int}, string list) Either.t
*)

  val version : string

  structure Open =
  struct
    type t = t
    val =~ : string * string -> ({msg:string, pos:int}, string list) Either.t
  end
end

